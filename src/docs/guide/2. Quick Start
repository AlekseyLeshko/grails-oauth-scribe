1. Install the plugin

Installing the plugin can be done in one of two ways:

a. Installing the plugin using the Grails dependency DSL (Recommended)

In @BuildConfig.groovy@, add the dependency to your 'plugins' section:
{code}
    plugins {
        ...
        compile ':oauth:1.0'
        ...
    }
{code}

Note that the version (1.0 in the example above) should be change to refelect the version you would like to use.

b. Installing the plugin 'on-the-fly':

Simply run the command @grails install-plugin oauth@. Note that this will install the latest version into the global scope, rather than the compile scope which is slightly cleaner, above.

2. Configure the plugin

Before the plugin can work, it requires at least one provider to be configured. The following is the minimal configuration you can get away with:

In @Config.groovy@
{code}
    oauth {
        providers {
            twitter {
                api = TwitterApi
                key = 'my-key'
                secret = 'my-secret'
            }
        }
    }
{code}

In this example, @twitter@ is the provider name you will use within your application. @api@ is the scribe provider class which relates to the oauth service you are trying to connect to. It can be anything you want. @key@ is the oauth-key you have been given by your provider and @secret@ is the oauth-secret you have been given by your provider. You will need to import this into your @Config.groovy@ file using the standard java @import@ keyword.

Note that provider names are all lowercase - you don't necessarily need to lowercase them in your configuration, but when referencing them within the application, they have been lowercased for you. This means that 'MyProvider' becomes 'myprovider'.

At this stage, you can safely use the plugin with no further work!